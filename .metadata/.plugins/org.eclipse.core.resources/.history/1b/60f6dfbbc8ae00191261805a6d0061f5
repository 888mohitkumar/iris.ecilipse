package com.ds.ciena;

import java.util.concurrent.atomic.AtomicInteger;

class ThreeTonClass
{
	
	private static ThreeTonClass instance=null;
	private static volatile AtomicInteger counter = new AtomicInteger(0);
	private ThreeTonClass(){};
	public static synchronized ThreeTonClass getInstance()
	{
		if(counter.get()>=3)
		{
			return instance;
		}
		 counter.incrementAndGet();
		 return new ThreeTonClass();
		
	}
	
}

public class FiveTon {

	
	public static void main(String[] args) {
		System.out.println(ThreeTonClass.getInstance().hashCode());
		System.out.println(ThreeTonClass.getInstance().hashCode());
		System.out.println(ThreeTonClass.getInstance().hashCode());
		System.out.println(ThreeTonClass.getInstance().hashCode());
		System.out.println(ThreeTonClass.getInstance().hashCode());
		System.out.println(ThreeTonClass.getInstance().hashCode());

	}

}
